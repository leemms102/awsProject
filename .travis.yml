before_install:
  - chmod +x gradlew

language: java
jdk:
  - openjdk8

branches: # 1.
  only:
    - master

# Travis CI 서버의 Home
cache: # 2.
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build" # 3.

before_deploy:
  - zip -r awsApplication *  # 프로젝트 위치에 있는 모든 파일 압축
  - mkdir -p deploy
  - mv awsApplication.zip deploy/awsApplication.zip

# 빌드는 Travis에서, 배포는 CodeDeploy에서, S3에서 빌드 결과물 저장
# Travis CI의 빌드 성공 -> S3에 zip 전송 -> ../step2/zip에 압축 풀음
deploy:
  - provider : s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: awsapplication-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: awsapplication-build # S3 버킷
    key: awsApplication.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: awsApplication # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: awsapplication-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일 알람
notifications: # 4.
  email:
    recipients:
      - leemms102@gmail.com
